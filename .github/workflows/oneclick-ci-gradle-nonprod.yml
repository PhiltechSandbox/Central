name: oneclick-ci-gradle-nonprod

on:
 workflow_call:
   inputs:
      ACTIONSFILE:    
        required: true
        type: string
      TAG:    
        required: true
        type: string 
      build_type:
        required: false
        type: string
      VERACODE_APPNAME:
       required: true  
       type: string
      branch_name: 
         required: false
         type: string   
   secrets:  
     SONAR_TOKEN:
       required: true
     SONAR_HOST_URL:
       required: true
     TL_USERNAME:
       required: true
     TL_PASSWORD:
       required: true
     REGISTRY_USER:
       required: true
     REGISTRY_PWD:
       required: true 
     VERACODEID:
       required: true  
     VERACODEKEY:
       required: true  
     SONAR_CONTINUEONERROR_NONPROD:
       required: false
     VERACODE_CONTINUEONERROR_NONPROD:
       required: false

env: 
  ACTIONSFILE: ${{ inputs.ACTIONSFILE }}
  TAG: ${{ inputs.TAG }}
jobs:          
  Sonarqube_Analysis:
    runs-on: [ AKS ]
    steps:
      - uses: actions/checkout@v2
      - name: Branch_Name
        run: |
          echo "${{ github.ref_name }}"
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          overwrite-settings: false
          distribution: 'adopt' 
      - name: Build
        continue-on-error: ${{ secrets.SONAR_CONTINUEONERROR_NONPROD == 'true' }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}  
        run: |
           cp /home/es00gh/.m2/settings.xml .
           chmod +x gradlew
           ./gradlew sonarqube -Dsonar.projectKey=RXIE-RxAppointmentService -Dsonar.branch.name=${{ github.ref_name }} -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} -Dsonar.login=${{ secrets.SONAR_TOKEN }} -PbuildNumber=${{ github.run_number }}
            
  Gradle_build:
    runs-on: [ aks]
    needs: Sonarqube_Analysis
    steps:
     - uses: actions/checkout@v2
     - name: Set up JDK 11
       uses: actions/setup-java@v2
       with:
          java-version: 11
          overwrite-settings: false
          distribution: 'adopt'
          #cache: maven
     - name: Run the gradle build
       run: |
        cp /home/es00gh/.m2/settings.xml .
        chmod +x gradlew
        ./gradlew generateGitProperties
        ./gradlew clean build
        ls -lrt
        rm build/libs/*-plain.jar
        mkdir -p target
        mv build/libs/*.jar target/RxAppointmentService.jar
     - name: Upload Artifacts
       uses: actions/upload-artifact@v2
       with:
          name: AppArtifacts
          path: |
            **/target/*.jar
            settings.xml     
  Veracode_scan:
    runs-on: [ AKS ]
    needs: Gradle_build
    steps:
      - uses: actions/checkout@v2    
      - name: Download Artifact.
        uses: actions/download-artifact@v2
        with:
          name: AppArtifacts           
      - name: veracode scan
        continue-on-error: ${{ secrets.VERACODE_CONTINUEONERROR_NONPROD == 'true' }}
        run: |
          date=$(echo ${{ steps.date.outputs.date }} | cut -c 3-)
          echo "${date}"
          ls -la
          wget https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
          unzip -o -d /tmp pipeline-scan-LATEST.zip
          java -jar /tmp/pipeline-scan.jar --veracode_api_id "${{ secrets.VERACODEID }}" --veracode_api_key "${{ secrets.VERACODEKEY }}" --request_policy "Current ABS-Non-PCI Standard 3.0"
          find . -name \*.jar -exec java -jar /tmp/pipeline-scan.jar --veracode_api_id "${{ secrets.VERACODEID }}" --veracode_api_key "${{ secrets.VERACODEKEY }}" --fail_on_severity="Very High, High" --file {} \;           
  
  Docker_build_Twistlock_And_Docker_Push:
    runs-on: [ AKS ]
    needs: [Veracode_scan]
    steps:
      - uses: actions/checkout@v2    
      - name: Download Artifact Jarfile.
        uses: actions/download-artifact@v2
        with:
          name: AppArtifacts 
      - name: Read application properties file
        id: appcode
        uses: albertsons/esgh-actions-jsonread@release
        with:
           path: ${{ env.ACTIONSFILE }}
           prop_path: application_properties.APPCODE           
      - name: Read application properties file
        id: app_name
        uses: albertsons/esgh-actions-jsonread@release
        with:
           path: ${{ env.ACTIONSFILE }}
           prop_path: application_properties.APP_NAME
      - name: Read application properties file
        id: registry_url
        uses: albertsons/esgh-actions-jsonread@release
        with:
           path: ${{ env.ACTIONSFILE }}
           prop_path: application_properties.REGISTRY_URL                
      - name: Docker Build     
        uses: albertsons/esgh-docker-login@v1
        with:
          registry: ${{ steps.registry_url.outputs.prop }}
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PWD }}          
      - run: |
          docker build --tag ${{ steps.registry_url.outputs.prop }}/${{ steps.appcode.outputs.prop }}/${{ steps.app_name.outputs.prop }}:${{ env.TAG }} .           
      - name: Twistlock Analysis
        id: scan
        uses: albertsons/esgh-prisma-twistlock@v1
        with:
          pcc_console_url: https://us-east1.cloud.twistlock.com/us-2-158288594
          pcc_user: ${{ secrets.TL_USERNAME }}
          pcc_pass: ${{ secrets.TL_PASSWORD }}
          image_name: ${{ steps.registry_url.outputs.prop }}/${{ steps.appcode.outputs.prop }}/${{ steps.app_name.outputs.prop }}:${{ env.TAG }}          
      - name: Docker login and Push Image to registry     
        uses: albertsons/esgh-docker-login@v1
        with:
          registry: ${{ steps.registry_url.outputs.prop }}
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PWD }} 
      - run: |
          docker push ${{ steps.registry_url.outputs.prop }}/${{ steps.appcode.outputs.prop }}/${{ steps.app_name.outputs.prop }}:${{ env.TAG }}
  
  
